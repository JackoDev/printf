.TH _PRINTF 3 "28 July 2019" "GNU" "Holberton Programmer's man page"
.SH NAME
.B _printf
- formatted output conversion
.SH SYNOPSIS
.B #include """holberton.h""

.B int _printf(const char \fI*format\fR, ...);
.SH DESCRIPTION
The function \fB_printf()\fR produce output according to a \fIformat\fR. It writes output to \fIstdout\fR, the standard output stream. It is a variadic type function, which means that it takes an undefinite number of arguments of any type.

The function produces the output under the control of a \fIformat\fR string that specifies how the succeding arguments (provided by the stdarg.h library) are converted for output.
.SS Format of the format string
The format string is a character string, it is composed of zero or more directives which include ordinary characters that are passed to output in its original state (excluding %), and conversion specifications which extract zero or more arguments. Each conversion specification begins with \fB%\fR character, and ends with a \fIconversion specifier\fR. In between those two some other options may be writen in this order \fIflags\fR, a minimum \fIfieldwidth\fR, \fIprecision\fR and a \fIlength modifier\fR.

.SS Flag characters
In development. Please check printf(3) man for further information.
.SS Field width
In development. Please check printf(3) man for further information.
.SS Precision
In development. Please check printf(3) man for further information.
.SS Length modifier
In development. Please check printf(3) man for further information.

.SS Conversion specifiers
A character that specifies the type of conversion to be applied.

.IP \fBd,i\fR
The \fIint\fR argument is converted to signed decimal notation. It is usually printed with a default precision of 1. In case the precision given is greater than the space needed it will be padded to the left and filled with zeros. In case both precision and argument are 0 the output is empty.

.IP \fBo,u,x,X\fR
The \fIunsigned int\ argument is converted to unsigned octal (\fBo\fR), unsigend decimal (\fBu\fR), or unsigned hexadecimal (\fBx\fR and \fBX\fR) notation (this last feature is being developed for next version).

.IP \fBb\fR
The \fIunsigned int\fR argument is converted to unsigned binary.

.IP \fBc\fR
If no \fBl\fR modifier is present, the \fIint\fR argument is converted to an \fIunsigned char\fR, and the resulting character is written. Otherwise the \fIwint_t\fR argument is converted to a multibyte sequence by call to the wcrtomb(3) function which will begin with the original state and will result into a multibyte string.

.IP \fBs\fR
If no \fBl\fR medifier is present: the \fIconst char *\fR argument is expected to be a pointer to an array of characters. The string will be written up to the null character, if precision is specified it will print until the number specified and there is no need for the null byte, if precision is not specified or is greater then the size of the array the null byte is needed.

If an \fBl\fR modifier is present: the \fIconst wchar_t *\fR argument is expected to be a pointer to an array of wide characters. In this case the precision will determine the number of bytes to be printed not the number of \fIwide characters\fR or \fIscreen positions\fR. Conditions (from previous paragraph) for precision and null byte apply.

.IP \fB%\fR
To print a '%' use double '%%'. No argument is converted.

.SH RETURN VALUE
Upon successful return, the function returns the number of characters printed (excluding null byte for strings). If the function fails a negative values is returned.
.SH BUGS
No known bugs.
.SH EXAMPLE

.SH COLOPHON
This page is part of the release 9.6 of the Holberton man-pages.
.SH AUTHOR
Javier Canon, Laura Peralta V
